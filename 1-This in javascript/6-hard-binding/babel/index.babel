

function foo() {
	console.log( this.a );
}

var obj = {
	a: 2
};

var bar = function() {
	foo.call( obj );
};

bar(); // 2
setTimeout( bar, 100 ); // 2

// `bar` hard binds `foo`'s `this` to `obj`
// so that it cannot be overriden
bar.call( window ); // 2





function foo2(something) {
	console.log( this.a2, something );
	return this.a + something;
}

var obj2 = {
	a2: 2
};

var bar2 = function() {
	return foo2.apply( obj2, arguments );
};

var b2 = bar2( 3 ); // 2 3
console.log( b2 ); // 5